#  If 'strict' is True, then the Java Toolkit will reject unsigned
#  or unencrypted messages if it expects them signed or encrypted
#  Also will reject the messages if not strictly follow the SAML
onelogin.saml2.strict =  true

# Enable debug mode (to print errors)
onelogin.saml2.debug =  true


#  Service Provider Data that we are deploying
#

#  Identifier of the SP entity  (must be a URI)
onelogin.saml2.sp.entityid = http://d3ef4f266c29.ngrok.io/api/saml/metadata

# Specifies info about where and how the <AuthnResponse> message MUST be
#  returned to the requester, in this case our SP.
# URL Location where the <Response> from the IdP will be returned
onelogin.saml2.sp.assertion_consumer_service.url = http://d3ef4f266c29.ngrok.io/api/saml/acs

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-POST binding only
onelogin.saml2.sp.assertion_consumer_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST

# Specifies info about where and how the <Logout Response> message MUST be
# returned to the requester, in this case our SP.
onelogin.saml2.sp.single_logout_service.url = http://d3ef4f266c29.ngrok.io/api/saml/sls

# SAML protocol binding to be used when returning the <LogoutResponse> or sending the <LogoutRequest>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.sp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Specifies constraints on the name identifier to be used to
# represent the requested subject.
# Take a look on lib/Saml2/Constants.php to see the NameIdFormat supported
onelogin.saml2.sp.nameidformat = urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified

# Usually x509cert and privateKey of the SP are provided by files placed at
# the certs folder. But we can also provide them with the following parameters

onelogin.saml2.sp.x509cert = -----BEGIN CERTIFICATE-----MIIFiTCCA3GgAwIBAgIUVfi4RGI1cPwxCBXxkjD2bg57Mh4wDQYJKoZIhvcNAQELBQAwVDELMAkGA1UEBhMCYnkxEzARBgNVBAgMClNvbWUtU3RhdGUxDTALBgNVBAoMBHRlc3QxDTALBgNVBAsMBHRlc3QxEjAQBgNVBAMMCXRlc3QudGVzdDAeFw0yMDEwMDIwODU5MjhaFw0yMTEwMDIwODU5MjhaMFQxCzAJBgNVBAYTAmJ5MRMwEQYDVQQIDApTb21lLVN0YXRlMQ0wCwYDVQQKDAR0ZXN0MQ0wCwYDVQQLDAR0ZXN0MRIwEAYDVQQDDAl0ZXN0LnRlc3QwggIiMA0GCSqGSIb3DQEBAQUAA4ICDwAwggIKAoICAQDj0jYCYTufrpRUz/BE7o4EjneG8Q4VfIgWoy3gTVv0G9/xN5Q8VaSHAV77cih92sZSIylFZlQB9mu3nyQdzrZwa1M19MzEKxoROpNyX+N7+63l+bcXPS5ay+h/EX84h19kC5OMFcx+fNz2KN3loETdjRdWwMOR5+AtLEmotnm1Qozti2pa+pE8Hg7ccLgpV+WWEsh8U+35hN3lB/rkc2RNwVdv1QvtKBU13krt19vLBLgSS75Kuy211/l+VtUEXbfAwub2nOqTH7RwB/4+WiYG0eM3ExHuM97AzjrjgVUKbNz1UPgwdAUjdODMbdr9gXmvY2QdJn6/Pa071kFynYtMK8HLGkFkxkE8/xyf/WYgXwWmSl1XOIzPuenqufs4WP0wWbjbq0GCNAkfdkjGWapBw0y1UzbWgwZRZFSLPc7JTXnvhbzXv8lJgHUjrUnJWtN+IXA3hvCkbRI73jW0Vr4CvDiUTCEeU9ZN6HtJcHxO4rauZ6y69tsjKYQjt99yJYV2q322402DM4Pwm/uicUat1hu5O1EuzuZd6QGrtrcH2S4e2eI3FFg89UfdlK2udkICBAet2MEZiV7Gk7JPekX1KOlhkn8DAILrk93b4prpsQFV/CpXPbXSKUq2r0FSHTjo4Mj7JQjK1oo9KZ4B+7FYbe95rALDFm3Jh9O6quhkiQIDAQABo1MwUTAdBgNVHQ4EFgQUVols8dmA8aocY7vmhRSzdXy85s8wHwYDVR0jBBgwFoAUVols8dmA8aocY7vmhRSzdXy85s8wDwYDVR0TAQH/BAUwAwEB/zANBgkqhkiG9w0BAQsFAAOCAgEAYX/1eedQ1Fpibiffaer0O0+jSuQ89gOupk3hN9PZs4xvVn8+gPH6C+smHoT/RfI3x1Po6k46v5EAEt0krQrH9SRp71+uge8tR+VpXvmuUE2PA2XhH4c2ZmecWYXDe8nlp5syeTk5ms1k4wb0x01lS9QDjIKe1VqN0FgzXKViLqGsSRdBaTCNnsGv56xKZgMG1/yPcZV5LoE0bKdO/j4iKD+RYfsc5s+BJysqyfhLY7FFjOoY0OwICu6oL1fOGRXteycTzsngSEY5QdKCJZN4ZuwhmpELH+ARjhql6D3GT9Bh4YWk3EdhnH/f0DzFwBfr+naWk0Hh00f8ninWpEcXjC8Ecik5IsNJMUO3CEeG8eQpxke9AliEmDVdYQwCT8LNeIZvkm5PUobk3u/cTkMTICWKssNbxcW0fToNZlc7VB6qv5/rTWZtd/CPWpOoTm/kJWVSAx1N44lRAGQcGDd8yOXDd24S/JC5gv/p019TLXN+48SGMt9S1AF54pjcNhMfnm17nfyJ3pXfTnQGa2D4ELqmkeQzsM0GpTzbt9G1VjjA5TqvFEOMucP586JjkMYbWpSR74f2CNxD/Q1LKb0816smI20Sz6+cG74QHdc2B8S4BbFYKLb8CtSftozBiiBgoYZCv98uDGmUMIg7gKwQP+wZIeveGcAN+H7v4hTkVGI=-----END CERTIFICATE-----

# Requires Format PKCS#8   BEGIN PRIVATE KEY
# If you have     PKCS#1   BEGIN RSA PRIVATE KEY  convert it by   openssl pkcs8 -topk8 -inform pem -nocrypt -in sp.rsa_key -outform pem -out sp.pem
onelogin.saml2.sp.privatekey = -----BEGIN PRIVATE KEY-----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-----END PRIVATE KEY-----

# Identity Provider Data that we want connect with our SP
#

# Identifier of the IdP entity  (must be a URI)
onelogin.saml2.idp.entityid = https://app.onelogin.com/saml/metadata/2d1bc0fe-7b89-41e0-8100-ea0611d6e79c

# SSO endpoint info of the IdP. (Authentication Request protocol)
# URL Target of the IdP where the SP will send the Authentication Request Message
onelogin.saml2.idp.single_sign_on_service.url = https://edn-dev.onelogin.com/trust/saml2/http-redirect/sso/2d1bc0fe-7b89-41e0-8100-ea0611d6e79c
# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_sign_on_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# SLO endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Request
onelogin.saml2.idp.single_logout_service.url = https://edn-dev.onelogin.com/trust/saml2/http-redirect/slo/1274921

# Optional SLO Response endpoint info of the IdP.
# URL Location of the IdP where the SP will send the SLO Response. If left blank, same URL as onelogin.saml2.idp.single_logout_service.url will be used.
# Some IdPs use a separate URL for sending a logout request and response, use this property to set the separate response url
onelogin.saml2.idp.single_logout_service.response.url =

# SAML protocol binding to be used when returning the <Response>
# message.  Onelogin Toolkit supports for this endpoint the
# HTTP-Redirect binding only
onelogin.saml2.idp.single_logout_service.binding = urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect

# Public x509 certificate of the IdP
#onelogin.saml2.idp.x509cert = -----BEGIN CERTIFICATE-----MIIDzzCCAregAwIBAgIUCu9lf12aDCoh/Jj0YGpXXsSsCTMwDQYJKoZIhvcNAQEFBQAwQTEMMAoGA1UECgwDZWRuMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxGjAYBgNVBAMMEU9uZUxvZ2luIEFjY291bnQgMB4XDTIwMTAwMTIwMjkxMVoXDTI1MTAwMTIwMjkxMVowQTEMMAoGA1UECgwDZWRuMRUwEwYDVQQLDAxPbmVMb2dpbiBJZFAxGjAYBgNVBAMMEU9uZUxvZ2luIEFjY291bnQgMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAw65cbQltak4ypqf086d59kClk7gfw1kuBkzQLC4xqkV0IGb2oI7OKxOhA5WHyymK98C/T8moSV155yFVAKUNePBGtkVEYlQgYxitJMjj0Er5SArw15Hzas6ZnEVrMBoo8h5aJ9cfFnFoorTLMprfH6fvN3K7OUgBbKEVFLGbxgRdUGaYELlt6GpMQILp3II28tcYaWmAsX3THlh5jn+f10Y9/Wnk86GHUWpwIYwOuuyw0eH7J+Y4SZSeT/PulWN6PzlKiu7EhJZAoYWnT6JJt8hdP2lMEbR2CKgRtXFzolX0/EUFS47Am4IZZKhSRXzMOP6Nf4C2Q4PD5gaPcN2z3QIDAQABo4G+MIG7MAwGA1UdEwEB/wQCMAAwHQYDVR0OBBYEFCQU4QRUJztPG+R+2BmqiKYZ7mMdMHwGA1UdIwR1MHOAFCQU4QRUJztPG+R+2BmqiKYZ7mMdoUWkQzBBMQwwCgYDVQQKDANlZG4xFTATBgNVBAsMDE9uZUxvZ2luIElkUDEaMBgGA1UEAwwRT25lTG9naW4gQWNjb3VudCCCFArvZX9dmgwqIfyY9GBqV17ErAkzMA4GA1UdDwEB/wQEAwIHgDANBgkqhkiG9w0BAQUFAAOCAQEAcXVjntLs4m4ObfPSzRc5jSgH5hkYJwosfCVLTXWzXYjr4jWrzzdw+9t8S2xPjdC94c1PClj8tvqB6zltT1Nq500vitLK2bwPXJ3b7gi/PtOauRAMzGFtj5LCQpr2QAL9idCJihhqDoXcSw5WZGFPwm+4Ju8QFli270qEZwRsOfpmjtQ5KcOBuoVIvGuRgwu2eu8cIauBBfZs3c4Z81jh+fyUfGkwvAj0lynMnNd/pCW2cNcc1R22OdgXwXbawBHmG2pbvmKz5mkiZo1KKx/h0FQfxpo7E7ZKj/uir2ka2O/UfauvGa2TOv6n9ZnpZWNT4hJf9yV7/6a4Y0mkLGwoVA==-----END CERTIFICATE-----

# Instead of use the whole x509cert you can use a fingerprint
# (openssl x509 -noout -fingerprint -in "idp.crt" to generate it,
# or add for example the -sha256 , -sha384 or -sha512 parameter)
#
# If a fingerprint is provided, then the certFingerprintAlgorithm is required in order to
# let the toolkit know which Algorithm was used. Possible values: sha1, sha256, sha384 or sha512
# 'sha1' is the default value.
onelogin.saml2.idp.certfingerprint = 3398f8388e66fcbc74cce55cc4a920a4dc7093de
onelogin.saml2.idp.certfingerprint_algorithm = sha1


# Security settings
#

# Indicates that the nameID of the <samlp:logoutRequest> sent by this SP
# will be encrypted.
onelogin.saml2.security.nameid_encrypted = false

# Indicates whether the <samlp:AuthnRequest> messages sent by this SP
# will be signed.              [The Metadata of the SP will offer this info]
onelogin.saml2.security.authnrequest_signed = true

# Indicates whether the <samlp:logoutRequest> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutrequest_signed = true

# Indicates whether the <samlp:logoutResponse> messages sent by this SP
# will be signed.
onelogin.saml2.security.logoutresponse_signed = true

# Indicates a requirement for the <samlp:Response>, <samlp:LogoutRequest> and
# <samlp:LogoutResponse> elements received by this SP to be signed.
onelogin.saml2.security.want_messages_signed = false

# Indicates a requirement for the <saml:Assertion> elements received by this SP to be signed.
onelogin.saml2.security.want_assertions_signed = false

# Indicates a requirement for the Metadata of this SP to be signed.
# Right now supported null (in order to not sign) or true (sign using SP private key)
onelogin.saml2.security.sign_metadata =

# Indicates a requirement for the Assertions received by this SP to be encrypted
onelogin.saml2.security.want_assertions_encrypted = false

# Indicates a requirement for the NameID received by this SP to be encrypted
onelogin.saml2.security.want_nameid_encrypted = false

# Authentication context.
# Set Empty and no AuthContext will be sent in the AuthNRequest
# You can set multiple values (comma separated them)
onelogin.saml2.security.requested_authncontext = urn:oasis:names:tc:SAML:2.0:ac:classes:Password

# Allows the authn comparison parameter to be set, defaults to 'exact'
onelogin.saml2.security.onelogin.saml2.security.requested_authncontextcomparison = exact

# Allows duplicated names in the attribute statement
onelogin.saml2.security.allow_duplicated_attribute_name = false

# Indicates if the SP will validate all received xmls.
# (In order to validate the xml, 'strict' and 'wantXMLValidation' must be true).
onelogin.saml2.security.want_xml_validation = true

# Algorithm that the toolkit will use on signing process. Options:
#  'http://www.w3.org/2000/09/xmldsig#rsa-sha1'
#  'http://www.w3.org/2000/09/xmldsig#dsa-sha1'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha256'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha384'
#  'http://www.w3.org/2001/04/xmldsig-more#rsa-sha512'
onelogin.saml2.security.signature_algorithm = http://www.w3.org/2000/09/xmldsig#rsa-sha1

# Organization
onelogin.saml2.organization.name = SAML Experiment
onelogin.saml2.organization.displayname = SAML Experiment
onelogin.saml2.organization.url = http://saml.experiment.by
onelogin.saml2.organization.lang = RU

# Contacts
onelogin.saml2.contacts.technical.given_name = Technical Guy
onelogin.saml2.contacts.technical.email_address = technical@example.com
onelogin.saml2.contacts.support.given_name = Support Guy
onelogin.saml2.contacts.support.email_address = support@example.com